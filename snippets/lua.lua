---@diagnostic disable: undefined-global

return {
	s('fori', {
		t('for '),
		i(1, 'i'),
		t(' = 1, #'),
		i(2, 'list'),
		t(' do'),
		t({ '', '\t' }),
		i(3),
		t({ '', 'end' }),
		i(0),
	}),

	s('forv', {
		t('for _, '),
		i(1, 'value'),
		t(' in ipairs('),
		i(2, 'list'),
		t(') do'),
		t({ '', '\t' }),
		i(3),
		t({ '', 'end' }),
		i(0),
	}),

	s('forkv', {
		t('for '),
		i(1, 'key'),
		t(', '),
		i(2, 'value'),
		t(' in pairs('),
		i(3, 'tbl'),
		t(') do'),
		t({ '', '\t' }),
		i(4),
		t({ '', 'end' }),
		i(0),
	}),

	s('wh', {
		t('while '),
		i(1, 'condition'),
		t(' do'),
		t({ '', '\t' }),
		i(2),
		t({ '', 'end' }),
		i(0),
	}),

	s('rpt', {
		t('repeat'),
		t({ '', '\t' }),
		i(1),
		t({ '', 'until ' }),
		i(2, 'condition'),
		i(0),
	}),

	s('if', {
		t('if '),
		i(1, 'condition'),
		t(' then'),
		t({ '', '\t' }),
		i(2),
		t({ '', 'end' }),
		i(0),
	}),

	s('ife', {
		t('if '),
		i(1, 'condition'),
		t(' then'),
		t({ '', '\t' }),
		i(2),
		t({ '', 'else' }),
		t({ '', '\t' }),
		i(3),
		t({ '', 'end' }),
		i(0),
	}),

	s('ifei', {
		t('if '),
		i(1, 'condition1'),
		t(' then'),
		t({ '', '\t' }),
		i(2),
		t({ '', 'elseif ' }),
		i(3, 'condition2'),
		t(' then'),
		t({ '', '\t' }),
		i(4),
		t({ '', 'else' }),
		t({ '', '\t' }),
		i(5),
		t({ '', 'end' }),
		i(0),
	}),

	s('fn', {
		t('local function '),
		i(1, 'name'),
		t('('),
		i(2, 'args'),
		t(')'),
		t({ '', '\t' }),
		i(3),
		t({ '', 'end' }),
		i(0),
	}),

	s('pri', {
		t('print(vim.inspect('),
		i(1, 'value'),
		t('))'),
		i(0),
	}),
}
