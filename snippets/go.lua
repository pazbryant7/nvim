---@diagnostic disable: undefined-global

return {
	s('fori', {
		t('for '),
		i(1, 'i'),
		t(' := 0; '),
		rep(1),
		t(' < '),
		i(2, 'limit'),
		t('; '),
		rep(1),
		t('++ {'),
		t({ '', '\t' }),
		i(3),
		t({ '', '}' }),
	}),

	s('forv', {
		t('for _, '),
		i(1, 'v'),
		t(' := range '),
		i(2, 'iterable'),
		t(' {'),
		t({ '', '\t' }),
		i(3),
		t({ '', '}' }),
	}),

	s('forkv', {
		t('for '),
		i(1, 'k'),
		t(', '),
		i(2, 'v'),
		t(' := range '),
		i(3, 'iterable'),
		t(' {'),
		t({ '', '\t' }),
		i(4),
		t({ '', '}' }),
	}),

	s('forw', {
		t('for '),
		i(1, 'condition'),
		t(' {'),
		t({ '', '\t' }),
		i(2),
		t({ '', '}' }),
	}),

	s('if', {
		t('if '),
		i(1, 'condition'),
		t(' {'),
		t({ '', '\t' }),
		i(2),
		t({ '', '}' }),
	}),

	s('ife', {
		t('if '),
		i(1, 'condition'),
		t(' {'),
		t({ '', '\t' }),
		i(2),
		t({ '', '} else {' }),
		t({ '', '\t' }),
		i(3),
		t({ '', '}' }),
	}),

	s('ifei', {
		t('if '),
		i(1, 'condition1'),
		t(' {'),
		t({ '', '\t' }),
		i(2),
		t({ '', '} else if ' }),
		i(3, 'condition2'),
		t(' {'),
		t({ '', '\t' }),
		i(4),
		t({ '', '} else {' }),
		t({ '', '\t' }),
		i(5),
		t({ '', '}' }),
	}),

	s('sw', {
		t('switch '),
		i(1, 'variable'),
		t(' {'),
		t({ '', 'case ' }),
		i(2, 'value'),
		t(':'),
		t({ '', '\t' }),
		i(3),
		t({ '', 'default:' }),
		t({ '', '\t' }),
		i(4),
		t({ '', '}' }),
	}),

	s('st', {
		t('type '),
		i(1, 'MyStruct'),
		t(' struct {'),
		t({ '', '\t' }),
		i(2),
		t({ '', '}' }),
	}),

	s('fn', {
		t('func '),
		i(1, 'myFunc'),
		t('('),
		i(2, 'params'),
		t(') '),
		i(3, 'returnType'),
		t(' {'),
		t({ '', '\t' }),
		i(4),
		t({ '', '}' }),
	}),

	s('meth', {
		t('func ('),
		i(1, 's *MyStruct'),
		t(') '),
		i(2, 'myMethod'),
		t('('),
		i(3, 'params'),
		t(') '),
		i(4, 'returnType'),
		t(' {'),
		t({ '', '\t' }),
		i(5),
		t({ '', '}' }),
	}),

	s('go', {
		t('go func() {'),
		t({ '', '\t' }),
		i(1),
		t({ '', '}()' }),
	}),

	s('iferr', {
		t('if err := '),
		i(1, 'someFunc()'),
		t('; err != nil {'),
		t({ '', '\t' }),
		i(2, 'return err'),
		t({ '', '}' }),
	}),

	s('sel', {
		t('select {'),
		t({ '', 'case ' }),
		i(1, 'msg'),
		t(' := <-'),
		i(2, 'ch'),
		t(':'),
		t({ '', '\t' }),
		i(3),
		t({ '', 'default:' }),
		t({ '', '\t' }),
		i(4),
		t({ '', '}' }),
	}),

	s('pl', {
		t('fmt.Println('),
		i(1),
		t(')'),
	}),
}
